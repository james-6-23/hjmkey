# ============================================================
# HAJIMI KING V2.0 - 配置文件模板
# ============================================================
# 复制此文件为 .env 并填入实际值

# ============================================================
# 核心配置
# ============================================================

# 运行模式 (development/production)
ENVIRONMENT=production

# 数据根目录（默认为项目根目录下的 data/）
DATA_ROOT=./data

# 是否启用调试模式
DEBUG=false

# ============================================================
# GitHub API 配置
# ============================================================

# GitHub 令牌列表（多个令牌用逗号分隔）
# 格式: github_pat_xxxxx,github_pat_yyyyy
GITHUB_TOKENS=

# 或者从文件加载（推荐）
GITHUB_TOKENS_FILE=data/github_tokens.txt

# TokenPool 策略
# 可选: ROUND_ROBIN, LEAST_USED, BEST_QUOTA, HEALTH_SCORE, ADAPTIVE
TOKEN_POOL_STRATEGY=ADAPTIVE

# 每秒最大请求数（全局限流）
GITHUB_QPS_MAX=10

# 单页最大重试次数
GITHUB_PAGE_RETRY_MAX=3

# 数据丢失阈值（超过此比例会触发补扫）
DATA_LOSS_THRESHOLD=0.2

# ============================================================
# Gemini API 配置
# ============================================================

# Gemini API 密钥（用于验证找到的密钥）
GEMINI_API_KEY=

# 验证模型
VALIDATION_MODEL=gemini-2.5-flash

# 验证超时（秒）
VALIDATION_TIMEOUT=30

# 批量验证大小
VALIDATION_BATCH_SIZE=10

# ============================================================
# 安全配置
# ============================================================

# 是否允许明文存储密钥（生产环境建议设为 false）
ALLOW_PLAINTEXT=false

# HMAC 盐值（用于密钥加密，请设置强密码）
HMAC_SALT=change_this_to_a_strong_secret_key

# 密钥脱敏配置
MASK_PREFIX_LENGTH=6
MASK_SUFFIX_LENGTH=4

# 文件权限（八进制）
SECRETS_FILE_MODE=0600
SECRETS_DIR_MODE=0700

# ============================================================
# 功能开关
# ============================================================

# 异步验证
ENABLE_ASYNC_VALIDATION=true
ASYNC_VALIDATION_CONCURRENCY=50
ASYNC_VALIDATION_BATCH_SIZE=100

# 进度显示
ENABLE_PROGRESS_DISPLAY=true
PROGRESS_UPDATE_INTERVAL=0.1
PROGRESS_REFRESH_RATE=10

# 结构化日志
ENABLE_STRUCTURED_LOGGING=true
LOG_FORMAT=json
LOG_LEVEL=INFO
LOG_FILE=logs/app.log

# 连接池优化
ENABLE_CONNECTION_POOL=true
CONNECTION_POOL_SIZE=50
CONNECTION_TIMEOUT=30
CONNECTION_RETRIES=3

# 数据库
ENABLE_DATABASE=true
DATABASE_TYPE=sqlite
DATABASE_PATH=data/app.db
DATABASE_POOL_SIZE=10

# 插件系统
ENABLE_PLUGINS=true
PLUGINS_DIR=plugins
PLUGINS_HOT_RELOAD=true

# 监控
ENABLE_MONITORING=true
METRICS_ENABLED=true
METRICS_PORT=9090

# ============================================================
# 优雅停机配置
# ============================================================

# 停机超时（秒）
SHUTDOWN_TIMEOUT=30

# 任务等待超时（秒）
TASK_WAIT_TIMEOUT=20

# 检查点保留数量
CHECKPOINT_KEEP_COUNT=5

# ============================================================
# 路径配置
# ============================================================

# 运行目录模式
# 格式: YYYYMMDD_HHMMSS_XXXX
RUN_ID_FORMAT="%Y%m%d_%H%M%S"

# 是否创建 latest 链接
CREATE_LATEST_LINK=true

# ============================================================
# 搜索配置
# ============================================================

# 默认搜索查询（每行一个）
DEFAULT_QUERIES=
# AIzaSy in:file
# AIzaSy in:file filename:.env
# AIzaSy in:file filename:config

# 最大循环次数（null 表示无限）
MAX_LOOPS=1

# 循环间延迟（秒）
LOOP_DELAY=10

# ============================================================
# 代理配置（可选）
# ============================================================

# HTTP 代理
# HTTP_PROXY=http://proxy.example.com:8080

# HTTPS 代理
# HTTPS_PROXY=https://proxy.example.com:8080

# 不使用代理的域名
# NO_PROXY=localhost,127.0.0.1

# ============================================================
# 高级配置
# ============================================================

# 并发搜索数
MAX_CONCURRENT_SEARCHES=5

# 并发验证数
MAX_CONCURRENT_VALIDATIONS=10

# 批处理大小
BATCH_SIZE=20

# 检查点间隔
CHECKPOINT_INTERVAL=20

# 是否启用异步模式
ENABLE_ASYNC=true

# ============================================================
# 监控和告警
# ============================================================

# Prometheus 指标
ENABLE_PROMETHEUS=false
PROMETHEUS_PORT=9090

# 告警配置
ALERT_ON_DATA_LOSS=true
ALERT_DATA_LOSS_THRESHOLD=0.5

ALERT_ON_ERROR_RATE=true
ALERT_ERROR_RATE_THRESHOLD=0.1

# Webhook 通知（可选）
# WEBHOOK_URL=https://hooks.slack.com/services/xxx
# WEBHOOK_ON_SUCCESS=true
# WEBHOOK_ON_FAILURE=true

# ============================================================
# 开发配置
# ============================================================

# 测试模式（跳过实际 API 调用）
TEST_MODE=false

# 模拟数据
USE_MOCK_DATA=false

# 详细日志
VERBOSE_LOGGING=false

# 性能分析
ENABLE_PROFILING=false
PROFILE_OUTPUT=profiles/

# ============================================================
# 注意事项
# ============================================================
# 1. 生产环境必须设置 ALLOW_PLAINTEXT=false
# 2. 必须更改 HMAC_SALT 为强密码
# 3. GitHub 令牌需要有 repo 和 code search 权限
# 4. 建议使用文件方式管理 GitHub 令牌
# 5. 定期轮换密钥和令牌
# ============================================================