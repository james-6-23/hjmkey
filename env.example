# ====================================
# Hajimi King 配置文件模板
# ====================================
# 复制此文件为 .env 并填入您的配置
# cp env.example .env
# ====================================

# ====================================
# 🔴 必填配置
# ====================================

# GitHub访问令牌（必填）
# 多个token用逗号分隔，或在 data/github_tokens.txt 中配置（每行一个）
# 获取方式：https://github.com/settings/tokens (需要 public_repo 权限)
GITHUB_TOKENS=ghp_your_token_here_1,ghp_your_token_here_2,ghp_your_token_here_3

# ====================================
# 🟡 重要配置（建议配置）
# ==================================== 

# 代理配置（推荐使用，避免IP被封）
# 支持多个代理（逗号分隔）和账密认证
# 格式：http://user:pass@proxy:port 或 http://proxy:port
# 推荐方案：https://github.com/cmj2002/warp-docker
PROXY=http://localhost:1080

# 数据存储目录路径
DATA_PATH=/app/data

# 仓库年龄过滤（天数）
# 只扫描指定天数内更新的仓库，减少无效搜索
DATE_RANGE_DAYS=730

# 搜索查询配置文件路径
# 查询表达式是搜索效率的关键，需要发挥想象力
QUERIES_FILE=queries.txt

# 用于验证key有效性的Gemini模型
# 可选：gemini-2.5-flash, gemini-1.5-flash, gemini-pro
HAJIMI_CHECK_MODEL=gemini-2.5-flash

# ====================================
# 🔗 外部同步配置
# ====================================

# --- Gemini Balancer 同步配置 ---
# 项目地址：https://github.com/snailyp/gemini-balance
GEMINI_BALANCER_SYNC_ENABLED=false
GEMINI_BALANCER_URL=
GEMINI_BALANCER_AUTH=

# --- GPT Load Balancer 同步配置 ---
# 项目地址：https://github.com/tbphp/gpt-load
# 说明：有效密钥和429限流密钥都会被同步
GPT_LOAD_SYNC_ENABLED=false
GPT_LOAD_URL=
GPT_LOAD_AUTH=
# 支持多个组，用逗号分隔
GPT_LOAD_GROUP_NAME=production,staging,development

# ====================================
# 🟢 高级配置（保持默认即可）
# ====================================

# --- 文件命名配置 ---
# 有效密钥文件前缀
VALID_KEY_PREFIX=keys/keys_valid_

# 限流密钥文件前缀（429状态，可能是有效的）
RATE_LIMITED_KEY_PREFIX=keys/key_429_

# 付费版密钥文件前缀（新功能）
PAID_KEY_PREFIX=keys/keys_paid_

# 免费版密钥文件前缀（新功能）
FREE_KEY_PREFIX=keys/keys_free_

# 发送到外部应用的密钥文件前缀
KEYS_SEND_PREFIX=keys/keys_send_

# --- 日志配置 ---
# 有效密钥详细日志前缀
VALID_KEY_DETAIL_PREFIX=logs/keys_valid_detail_

# 限流密钥详细日志前缀
RATE_LIMITED_KEY_DETAIL_PREFIX=logs/key_429_detail_

# 发送结果详细日志前缀
KEYS_SEND_DETAIL_PREFIX=logs/keys_send_detail_

# --- 扫描配置 ---
# 已扫描文件SHA记录
SCANNED_SHAS_FILE=scanned_shas.txt

# 文件路径黑名单（逗号分隔）
# 过滤掉文档、示例、测试等无效文件
FILE_PATH_BLACKLIST=readme,docs,doc/,.md,example,sample,tutorial,test,spec,demo,mock,documentation,guide,manual

# --- 搜索性能配置 ---
# 最大并发搜索数
MAX_CONCURRENT_SEARCHES=5

# 最大并发验证数
MAX_CONCURRENT_VALIDATIONS=10

# 搜索请求间隔（秒）
SEARCH_DELAY=1

# 批量发送间隔（秒）
BATCH_SEND_INTERVAL=60

# --- Token管理配置（新功能）---
# GitHub Token文件路径（可选，优先级高于GITHUB_TOKENS）
GITHUB_TOKENS_FILE=data/github_tokens.txt

# Token轮换策略
# 可选：round_robin（轮询）, random（随机）, least_used（最少使用）
TOKEN_ROTATION_STRATEGY=round_robin

# Token额度检查间隔（秒）
TOKEN_CHECK_INTERVAL=300

# ====================================
# 📝 使用说明
# ====================================
# 1. 必须配置 GITHUB_TOKENS 或在 data/github_tokens.txt 中配置
# 2. 强烈建议配置 PROXY 避免IP被封
# 3. GPT_LOAD 和 GEMINI_BALANCER 可选配置
# 4. 429限流的密钥也会被保存和同步（很可能是有效的）
# 5. 付费版密钥会在程序退出时自动识别并分类保存
# ====================================

# ====================================
# 🔍 查询配置示例 (queries.txt)
# ====================================
# AIzaSy in:file
# AIzaSy in:file extension:json
# AIzaSy in:file extension:env
# gemini api key in:file
# GEMINI_API_KEY in:file
# google ai api in:file
# generativeai in:file extension:py
# ====================================
